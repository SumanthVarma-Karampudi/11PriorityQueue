1st factor:Height

Minimum no.of nodes with height h CBT: 2^(h-1)
Height=4
                       o              2^0 (first term a=2^0) and r=2
                    o    o            2^1
                   o o  o o           2^2
                  o                    1             ==> a(r^n-1)/r-1= a(r^(h-1)-1)/(r-1) + 1


Maximum no.of nodes with height h CBT: 2^(h)-1
Height=4
                       o              2^0 (first term a=2^0) and r=2
                    o    o            2^1
                   o o  o o           2^2
                  oo oo oo oo         2^3           ==> a(r^n-1)/r-1= a(r^(h)-1)/(r-1)


====>  (2^(h-1)) <= n <= (2^h -1)
       If we solve this, we get h value as logn  on applying log on lhs and rhs.
       this means that complete binary is balanced tree



Insertion in CBT:
We can insert only at last level so we need to traverse level wise ====> we so use Arrays for creating CBT(Complete Binary Tree).
Formulas for left child and right child in level wise insertion queue --------------> 0 1 2 3 4 5 
                                                                         0 child 1 2 
                                                                         1 child 3 4
                                                                         2 child 4 5
By observing we derive formula for this     left child= 2*i+1
                                            right child= 2*i+2
                                                             
                                          parent from left child= LC-1/2
                                          parent from right child= Rc-1/2
